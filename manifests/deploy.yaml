apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
  name: lbconfig-operator-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.0
  creationTimestamp: null
  name: externalloadbalancers.lb.lbconfig.carlosedp.com
spec:
  group: lb.lbconfig.carlosedp.com
  names:
    kind: ExternalLoadBalancer
    listKind: ExternalLoadBalancerList
    plural: externalloadbalancers
    shortNames:
    - elb
    singular: externalloadbalancer
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    - description: Load Balancer VIP
      jsonPath: .spec.vip
      name: VIP
      type: string
    - description: Load Balancer Ports
      jsonPath: .spec.ports
      name: Ports
      type: string
    - description: Load Balancer Provider Backend
      jsonPath: .spec.provider.vendor
      name: Provider
      type: string
    - description: Amount of nodes in the load balancer
      jsonPath: .status.numnodes
      name: Nodes
      type: string
    - description: Type of nodes in this Load Balancer
      jsonPath: .spec.type
      name: Type
      type: string
    - description: Node Labels matching this Load Balancer
      jsonPath: .status.labels
      name: Matching Node Labels
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        description: ExternalLoadBalancer is the Schema for the externalloadbalancers API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ExternalLoadBalancerSpec is the spec of a LoadBalancer instance.
            properties:
              monitor:
                description: Monitor is the path and port to monitor the LoadBalancer members
                properties:
                  monitortype:
                    description: MonitorType is the monitor parent type. <monitorType> must be one of "http", "https", "icmp".
                    enum:
                    - http
                    - https
                    - icmp
                    type: string
                  name:
                    description: Name is the monitor name, it is set by the controller
                    type: string
                  path:
                    description: Path is the path URL to check for the pool members in the format `/healthz`
                    minLength: 1
                    type: string
                  port:
                    description: Port is the port this monitor should check the pool members
                    maximum: 65535
                    minimum: 1
                    type: integer
                required:
                - monitortype
                - path
                - port
                type: object
              nodelabels:
                additionalProperties:
                  type: string
                description: NodeLabels are the node labels used for router sharding as an alternative to "type". Optional.
                type: object
              ports:
                description: Ports is the ports exposed by this LoadBalancer instance
                items:
                  type: integer
                maxItems: 128
                minItems: 1
                type: array
              provider:
                description: Provider is the LoadBalancer backend provider
                properties:
                  creds:
                    description: 'Creds is the credentials secret holding the "username" and "password" keys. Generate with: `kubectl create secret generic <secret-name> --from-literal=username=<username> --from-literal=password=<password>`'
                    type: string
                  debug:
                    default: false
                    description: Debug is a flag to enable debug on the backend log output. Defaults to false.
                    enum:
                    - true
                    - false
                    type: boolean
                  host:
                    description: Host is the Load Balancer API IP or Hostname in URL format. Eg. `http://10.25.10.10`.
                    maxLength: 255
                    minLength: 1
                    type: string
                  lbmethod:
                    default: ROUNDROBIN
                    description: 'Type is the Load-Balancing method. Defaults to "round-robin". Options are: ROUNDROBIN, LEASTCONNECTION, LEASTRESPONSETIME'
                    enum:
                    - ROUNDROBIN
                    - LEASTCONNECTION
                    - LEASTRESPONSETIME
                    type: string
                  partition:
                    description: Partition is the F5 partition to create the Load Balancer instances. Defaults to "Common". (F5 BigIP only)
                    type: string
                  port:
                    description: Port is the Load Balancer API Port.
                    maximum: 65535
                    minimum: 1
                    type: integer
                  validatecerts:
                    default: false
                    description: ValidateCerts is a flag to validate or not the Load Balancer API certificate. Defaults to false.
                    enum:
                    - true
                    - false
                    type: boolean
                  vendor:
                    description: Vendor is the backend provider vendor
                    enum:
                    - Dummy
                    - F5_BigIP
                    - Citrix_ADC
                    - HAProxy
                    type: string
                required:
                - creds
                - host
                - port
                - vendor
                type: object
              type:
                description: Type is the node role type (master or infra) for the LoadBalancer instance
                enum:
                - master
                - infra
                type: string
              vip:
                description: Vip is the Virtual IP configured in  this LoadBalancer instance
                maxLength: 15
                minLength: 1
                type: string
            required:
            - monitor
            - ports
            - provider
            - vip
            type: object
          status:
            description: ExternalLoadBalancerStatus defines the observed state of ExternalLoadBalancer
            properties:
              labels:
                additionalProperties:
                  type: string
                type: object
              monitor:
                description: Monitor defines a monitor object in the LoadBalancer.
                properties:
                  monitortype:
                    description: MonitorType is the monitor parent type. <monitorType> must be one of "http", "https", "icmp".
                    enum:
                    - http
                    - https
                    - icmp
                    type: string
                  name:
                    description: Name is the monitor name, it is set by the controller
                    type: string
                  path:
                    description: Path is the path URL to check for the pool members in the format `/healthz`
                    minLength: 1
                    type: string
                  port:
                    description: Port is the port this monitor should check the pool members
                    maximum: 65535
                    minimum: 1
                    type: integer
                required:
                - monitortype
                - path
                - port
                type: object
              nodes:
                items:
                  description: Node defines a host object in the LoadBalancer.
                  properties:
                    host:
                      description: Host is the host IP set dynamically by the controller
                      type: string
                    label:
                      additionalProperties:
                        type: string
                      description: Label is the node labels this node has
                      type: object
                    name:
                      description: Name is the host name set dynamically by the controller
                      type: string
                  required:
                  - host
                  type: object
                type: array
              numnodes:
                type: integer
              pools:
                items:
                  description: Pool defines a pool object in the LoadBalancer.
                  properties:
                    members:
                      description: Members is the host members of this pool
                      items:
                        description: PoolMember defines a host object in the LoadBalancer.
                        properties:
                          node:
                            description: Node is the node part of a pool
                            properties:
                              host:
                                description: Host is the host IP set dynamically by the controller
                                type: string
                              label:
                                additionalProperties:
                                  type: string
                                description: Label is the node labels this node has
                                type: object
                              name:
                                description: Name is the host name set dynamically by the controller
                                type: string
                            required:
                            - host
                            type: object
                          port:
                            description: Port is the port for this pool member
                            type: integer
                        required:
                        - node
                        - port
                        type: object
                      type: array
                    monitor:
                      description: Monitor is the monitor name used on this pool
                      type: string
                    name:
                      description: Name is the Pool name, it is set by the controller
                      type: string
                  required:
                  - monitor
                  type: object
                type: array
              ports:
                items:
                  type: integer
                type: array
              provider:
                description: Provider is a backend provider for F5 Big IP Load Balancers
                properties:
                  creds:
                    description: 'Creds is the credentials secret holding the "username" and "password" keys. Generate with: `kubectl create secret generic <secret-name> --from-literal=username=<username> --from-literal=password=<password>`'
                    type: string
                  debug:
                    default: false
                    description: Debug is a flag to enable debug on the backend log output. Defaults to false.
                    enum:
                    - true
                    - false
                    type: boolean
                  host:
                    description: Host is the Load Balancer API IP or Hostname in URL format. Eg. `http://10.25.10.10`.
                    maxLength: 255
                    minLength: 1
                    type: string
                  lbmethod:
                    default: ROUNDROBIN
                    description: 'Type is the Load-Balancing method. Defaults to "round-robin". Options are: ROUNDROBIN, LEASTCONNECTION, LEASTRESPONSETIME'
                    enum:
                    - ROUNDROBIN
                    - LEASTCONNECTION
                    - LEASTRESPONSETIME
                    type: string
                  partition:
                    description: Partition is the F5 partition to create the Load Balancer instances. Defaults to "Common". (F5 BigIP only)
                    type: string
                  port:
                    description: Port is the Load Balancer API Port.
                    maximum: 65535
                    minimum: 1
                    type: integer
                  validatecerts:
                    default: false
                    description: ValidateCerts is a flag to validate or not the Load Balancer API certificate. Defaults to false.
                    enum:
                    - true
                    - false
                    type: boolean
                  vendor:
                    description: Vendor is the backend provider vendor
                    enum:
                    - Dummy
                    - F5_BigIP
                    - Citrix_ADC
                    - HAProxy
                    type: string
                required:
                - creds
                - host
                - port
                - vendor
                type: object
              vips:
                items:
                  description: VIP defines VIP instance in the LoadBalancer with a pool and port
                  properties:
                    ip:
                      description: IP is the IP address this VIP instance listens to
                      type: string
                    name:
                      description: Name is the VIP instance name
                      type: string
                    pool:
                      description: Pool is the associated pool with this VIP
                      type: string
                    port:
                      description: Port is the port this VIP listens to
                      type: integer
                  required:
                  - ip
                  - name
                  - pool
                  - port
                  type: object
                type: array
            required:
            - monitor
            - ports
            - vips
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: lbconfig-operator-controller-manager
  namespace: lbconfig-operator-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: lbconfig-operator-leader-election-role
  namespace: lbconfig-operator-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: lbconfig-operator-manager-role
rules:
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - list
  - update
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - lb.lbconfig.carlosedp.com
  resources:
  - externalloadbalancers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - lb.lbconfig.carlosedp.com
  resources:
  - externalloadbalancers/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: lbconfig-operator-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: lbconfig-operator-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: lbconfig-operator-leader-election-rolebinding
  namespace: lbconfig-operator-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: lbconfig-operator-leader-election-role
subjects:
- kind: ServiceAccount
  name: lbconfig-operator-controller-manager
  namespace: lbconfig-operator-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: lbconfig-operator-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: lbconfig-operator-manager-role
subjects:
- kind: ServiceAccount
  name: lbconfig-operator-controller-manager
  namespace: lbconfig-operator-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: lbconfig-operator-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: lbconfig-operator-proxy-role
subjects:
- kind: ServiceAccount
  name: lbconfig-operator-controller-manager
  namespace: lbconfig-operator-system
---
apiVersion: v1
data:
  controller_manager_config.yaml: |
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    kind: ControllerManagerConfig
    health:
      healthProbeBindAddress: :8081
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
    leaderElection:
      leaderElect: true
      resourceName: d8d64ee1.lbconfig.carlosedp.com
kind: ConfigMap
metadata:
  name: lbconfig-operator-manager-config
  namespace: lbconfig-operator-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: controller-manager
  name: lbconfig-operator-controller-manager-metrics-service
  namespace: lbconfig-operator-system
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: controller-manager
  name: lbconfig-operator-controller-manager
  namespace: lbconfig-operator-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=0
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.12.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 5m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        command:
        - /manager
        image: docker.io/carlosedp/lbconfig-operator:v0.2.1
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      securityContext:
        runAsNonRoot: true
      serviceAccountName: lbconfig-operator-controller-manager
      terminationGracePeriodSeconds: 10
